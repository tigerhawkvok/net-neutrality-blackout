// Generated by CoffeeScript 1.7.1
(function() {
  var blackoutPage, byteCount, delay, isBlank, isBool, isEmpty, isJson, isNull, isNumber, roundNumber, toFloat, toInt,
    __slice = [].slice;

  blackoutPage = function() {
    var body, contact, divId, headline, html, internetUtility, social, socialId;
    divId = "fcc-net-neutrality-blackout";
    headline = "What if because this website didn't pay as much as a major corporation, you couldn't see it?";
    body = "That's what could happen if the FCC doesn't stand up to cable companies and doesn't enshrine Net Neutrality in law.";
    internetUtility = "In 2014, the internet is no less important than electricty or your phone.<br/><br/>Tell the FCC.<br/><br/><span id='fcc-superstrong'>Tell them that it's time to classify ISPs as Common Carriers.</span>";
    contact = "";
    social = "";
    socialId = "fccblackout-social";
    html = "<div id='" + divId + "'><div id='" + divId + "-child'><h1>" + headline + "</h1><h2>" + body + "</h2><h3>" + internetUtility + "</h3><div id='" + socialId + "'>" + social + "</div></div></div>";
    $("body").prepend(html);
    $("#" + divId).css("height", $(document).height()).css("width", $(window).width()).css("position", "fixed").css("background", "#000").css("color", "#fff").css("z-index", "9999");
    $("#" + divId + "-child").css("padding", "2rem").css("text-align", "center");
    $("#fcc-superstrong").css("font-weight", "700").css("text-decoration", "underline").css("display", "block");
    return $("#" + divId + " h3").css("margin", "2em");
  };

  $(function() {
    var end, now, start;
    now = new Date();
    start = new Date(2014, 5, 15);
    end = new Date(2014, 5, 16);
    if ((start < now && now < end)) {
      return blackoutPage();
    }
  });

  isBool = function(str) {
    return str === true || str === false;
  };

  isEmpty = function(str) {
    return !str || str.length === 0;
  };

  isBlank = function(str) {
    return !str || /^\s*$/.test(str);
  };

  isNull = function(str) {
    try {
      if (isEmpty(str) || isBlank(str) || (str == null)) {
        if (!(str === false || str === 0)) {
          return true;
        }
      }
    } catch (_error) {

    }
    return false;
  };

  isJson = function(str) {
    if (typeof str === 'object') {
      return true;
    }
    try {
      JSON.parse(str);
      return true;
    } catch (_error) {

    }
    return false;
  };

  isNumber = function(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  };

  toFloat = function(str) {
    if (!isNumber(str) || isNull(str)) {
      return 0;
    }
    return parseFloat(str);
  };

  toInt = function(str) {
    if (!isNumber(str) || isNull(str)) {
      return 0;
    }
    return parseInt(str);
  };

  function toObject(arr) {
    var rv = {};
    for (var i = 0; i < arr.length; ++i)
        if (arr[i] !== undefined) rv[i] = arr[i];
    return rv;
};

  String.prototype.toBool = function() {
    return this.toString() === 'true';
  };

  Boolean.prototype.toBool = function() {
    return this.toString() === 'true';
  };

  Object.size = function(obj) {
    var key, size;
    size = 0;
    for (key in obj) {
      if (obj.hasOwnProperty(key)) {
        size++;
      }
    }
    return size;
  };

  delay = function(ms, f) {
    return setTimeout(f, ms);
  };

  roundNumber = function(number, digits) {
    var multiple;
    if (digits == null) {
      digits = 0;
    }
    multiple = Math.pow(10, digits);
    return Math.round(number * multiple) / multiple;
  };

  jQuery.fn.exists = function() {
    return jQuery(this).length > 0;
  };

  byteCount = (function(_this) {
    return function(s) {
      return encodeURI(s).split(/%..|./).length - 1;
    };
  })(this);

  function shuffle(o) { //v1.0
    for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
    return o;
};

  ({
    debounce: function(func, threshold, execAsap) {
      return function() {
        var args, delayed, obj, timeout;
        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        obj = this;
        delayed = function() {
          if (!execAsap) {
            return func.apply(obj, args);
          }
        };
        if (typeof timeout !== "undefined" && timeout !== null) {
          clearTimeout(timeout);
        } else if (execAsap) {
          func.apply(obj, args);
        }
        return timeout = setTimeout(delayed, threshold || 100);
      };
    }
  });

}).call(this);
